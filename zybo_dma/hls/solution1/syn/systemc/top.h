// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _top_HH_
#define _top_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "top_top_stream_stbkb.h"
#include "top_input.h"
#include "top_CONTROL_BUS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CONTROL_BUS_ADDR_WIDTH = 4,
         unsigned int C_S_AXI_CONTROL_BUS_DATA_WIDTH = 32>
struct top : public sc_module {
    // Port declarations 38
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<32> > INPUT_STREAM_TDATA;
    sc_in< sc_logic > INPUT_STREAM_TVALID;
    sc_out< sc_logic > INPUT_STREAM_TREADY;
    sc_in< sc_lv<4> > INPUT_STREAM_TKEEP;
    sc_in< sc_lv<4> > INPUT_STREAM_TSTRB;
    sc_in< sc_lv<4> > INPUT_STREAM_TUSER;
    sc_in< sc_lv<1> > INPUT_STREAM_TLAST;
    sc_in< sc_lv<5> > INPUT_STREAM_TID;
    sc_in< sc_lv<6> > INPUT_STREAM_TDEST;
    sc_out< sc_lv<32> > OUTPUT_STREAM_TDATA;
    sc_out< sc_logic > OUTPUT_STREAM_TVALID;
    sc_in< sc_logic > OUTPUT_STREAM_TREADY;
    sc_out< sc_lv<4> > OUTPUT_STREAM_TKEEP;
    sc_out< sc_lv<4> > OUTPUT_STREAM_TSTRB;
    sc_out< sc_lv<4> > OUTPUT_STREAM_TUSER;
    sc_out< sc_lv<1> > OUTPUT_STREAM_TLAST;
    sc_out< sc_lv<5> > OUTPUT_STREAM_TID;
    sc_out< sc_lv<6> > OUTPUT_STREAM_TDEST;
    sc_in< sc_logic > s_axi_CONTROL_BUS_AWVALID;
    sc_out< sc_logic > s_axi_CONTROL_BUS_AWREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_BUS_ADDR_WIDTH> > s_axi_CONTROL_BUS_AWADDR;
    sc_in< sc_logic > s_axi_CONTROL_BUS_WVALID;
    sc_out< sc_logic > s_axi_CONTROL_BUS_WREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_BUS_DATA_WIDTH> > s_axi_CONTROL_BUS_WDATA;
    sc_in< sc_uint<C_S_AXI_CONTROL_BUS_DATA_WIDTH/8> > s_axi_CONTROL_BUS_WSTRB;
    sc_in< sc_logic > s_axi_CONTROL_BUS_ARVALID;
    sc_out< sc_logic > s_axi_CONTROL_BUS_ARREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_BUS_ADDR_WIDTH> > s_axi_CONTROL_BUS_ARADDR;
    sc_out< sc_logic > s_axi_CONTROL_BUS_RVALID;
    sc_in< sc_logic > s_axi_CONTROL_BUS_RREADY;
    sc_out< sc_uint<C_S_AXI_CONTROL_BUS_DATA_WIDTH> > s_axi_CONTROL_BUS_RDATA;
    sc_out< sc_lv<2> > s_axi_CONTROL_BUS_RRESP;
    sc_out< sc_logic > s_axi_CONTROL_BUS_BVALID;
    sc_in< sc_logic > s_axi_CONTROL_BUS_BREADY;
    sc_out< sc_lv<2> > s_axi_CONTROL_BUS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    top(sc_module_name name);
    SC_HAS_PROCESS(top);

    ~top();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    top_top_stream_stbkb* top_stream_stream_s_U;
    top_CONTROL_BUS_s_axi<C_S_AXI_CONTROL_BUS_ADDR_WIDTH,C_S_AXI_CONTROL_BUS_DATA_WIDTH>* top_CONTROL_BUS_s_axi_U;
    top_input* input_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > INPUT_STREAM_V_data_V_0_data_out;
    sc_signal< sc_logic > INPUT_STREAM_V_data_V_0_vld_in;
    sc_signal< sc_logic > INPUT_STREAM_V_data_V_0_vld_out;
    sc_signal< sc_logic > INPUT_STREAM_V_data_V_0_ack_in;
    sc_signal< sc_logic > INPUT_STREAM_V_data_V_0_ack_out;
    sc_signal< sc_lv<32> > INPUT_STREAM_V_data_V_0_payload_A;
    sc_signal< sc_lv<32> > INPUT_STREAM_V_data_V_0_payload_B;
    sc_signal< sc_logic > INPUT_STREAM_V_data_V_0_sel_rd;
    sc_signal< sc_logic > INPUT_STREAM_V_data_V_0_sel_wr;
    sc_signal< sc_logic > INPUT_STREAM_V_data_V_0_sel;
    sc_signal< sc_logic > INPUT_STREAM_V_data_V_0_load_A;
    sc_signal< sc_logic > INPUT_STREAM_V_data_V_0_load_B;
    sc_signal< sc_lv<2> > INPUT_STREAM_V_data_V_0_state;
    sc_signal< sc_logic > INPUT_STREAM_V_data_V_0_state_cmp_full;
    sc_signal< sc_logic > INPUT_STREAM_V_dest_V_0_vld_in;
    sc_signal< sc_logic > INPUT_STREAM_V_dest_V_0_ack_out;
    sc_signal< sc_lv<2> > INPUT_STREAM_V_dest_V_0_state;
    sc_signal< sc_lv<32> > OUTPUT_STREAM_V_data_V_1_data_out;
    sc_signal< sc_logic > OUTPUT_STREAM_V_data_V_1_vld_in;
    sc_signal< sc_logic > OUTPUT_STREAM_V_data_V_1_vld_out;
    sc_signal< sc_logic > OUTPUT_STREAM_V_data_V_1_ack_in;
    sc_signal< sc_logic > OUTPUT_STREAM_V_data_V_1_ack_out;
    sc_signal< sc_lv<32> > OUTPUT_STREAM_V_data_V_1_payload_A;
    sc_signal< sc_lv<32> > OUTPUT_STREAM_V_data_V_1_payload_B;
    sc_signal< sc_logic > OUTPUT_STREAM_V_data_V_1_sel_rd;
    sc_signal< sc_logic > OUTPUT_STREAM_V_data_V_1_sel_wr;
    sc_signal< sc_logic > OUTPUT_STREAM_V_data_V_1_sel;
    sc_signal< sc_logic > OUTPUT_STREAM_V_data_V_1_load_A;
    sc_signal< sc_logic > OUTPUT_STREAM_V_data_V_1_load_B;
    sc_signal< sc_lv<2> > OUTPUT_STREAM_V_data_V_1_state;
    sc_signal< sc_logic > OUTPUT_STREAM_V_data_V_1_state_cmp_full;
    sc_signal< sc_lv<4> > OUTPUT_STREAM_V_keep_V_1_data_out;
    sc_signal< sc_logic > OUTPUT_STREAM_V_keep_V_1_vld_in;
    sc_signal< sc_logic > OUTPUT_STREAM_V_keep_V_1_vld_out;
    sc_signal< sc_logic > OUTPUT_STREAM_V_keep_V_1_ack_in;
    sc_signal< sc_logic > OUTPUT_STREAM_V_keep_V_1_ack_out;
    sc_signal< sc_logic > OUTPUT_STREAM_V_keep_V_1_sel_rd;
    sc_signal< sc_logic > OUTPUT_STREAM_V_keep_V_1_sel;
    sc_signal< sc_lv<2> > OUTPUT_STREAM_V_keep_V_1_state;
    sc_signal< sc_lv<4> > OUTPUT_STREAM_V_strb_V_1_data_out;
    sc_signal< sc_logic > OUTPUT_STREAM_V_strb_V_1_vld_in;
    sc_signal< sc_logic > OUTPUT_STREAM_V_strb_V_1_vld_out;
    sc_signal< sc_logic > OUTPUT_STREAM_V_strb_V_1_ack_in;
    sc_signal< sc_logic > OUTPUT_STREAM_V_strb_V_1_ack_out;
    sc_signal< sc_logic > OUTPUT_STREAM_V_strb_V_1_sel_rd;
    sc_signal< sc_logic > OUTPUT_STREAM_V_strb_V_1_sel;
    sc_signal< sc_lv<2> > OUTPUT_STREAM_V_strb_V_1_state;
    sc_signal< sc_lv<4> > OUTPUT_STREAM_V_user_V_1_data_out;
    sc_signal< sc_logic > OUTPUT_STREAM_V_user_V_1_vld_in;
    sc_signal< sc_logic > OUTPUT_STREAM_V_user_V_1_vld_out;
    sc_signal< sc_logic > OUTPUT_STREAM_V_user_V_1_ack_in;
    sc_signal< sc_logic > OUTPUT_STREAM_V_user_V_1_ack_out;
    sc_signal< sc_logic > OUTPUT_STREAM_V_user_V_1_sel_rd;
    sc_signal< sc_logic > OUTPUT_STREAM_V_user_V_1_sel;
    sc_signal< sc_lv<2> > OUTPUT_STREAM_V_user_V_1_state;
    sc_signal< sc_lv<1> > OUTPUT_STREAM_V_last_V_1_data_out;
    sc_signal< sc_logic > OUTPUT_STREAM_V_last_V_1_vld_in;
    sc_signal< sc_logic > OUTPUT_STREAM_V_last_V_1_vld_out;
    sc_signal< sc_logic > OUTPUT_STREAM_V_last_V_1_ack_in;
    sc_signal< sc_logic > OUTPUT_STREAM_V_last_V_1_ack_out;
    sc_signal< sc_lv<1> > OUTPUT_STREAM_V_last_V_1_payload_A;
    sc_signal< sc_lv<1> > OUTPUT_STREAM_V_last_V_1_payload_B;
    sc_signal< sc_logic > OUTPUT_STREAM_V_last_V_1_sel_rd;
    sc_signal< sc_logic > OUTPUT_STREAM_V_last_V_1_sel_wr;
    sc_signal< sc_logic > OUTPUT_STREAM_V_last_V_1_sel;
    sc_signal< sc_logic > OUTPUT_STREAM_V_last_V_1_load_A;
    sc_signal< sc_logic > OUTPUT_STREAM_V_last_V_1_load_B;
    sc_signal< sc_lv<2> > OUTPUT_STREAM_V_last_V_1_state;
    sc_signal< sc_logic > OUTPUT_STREAM_V_last_V_1_state_cmp_full;
    sc_signal< sc_lv<5> > OUTPUT_STREAM_V_id_V_1_data_out;
    sc_signal< sc_logic > OUTPUT_STREAM_V_id_V_1_vld_in;
    sc_signal< sc_logic > OUTPUT_STREAM_V_id_V_1_vld_out;
    sc_signal< sc_logic > OUTPUT_STREAM_V_id_V_1_ack_in;
    sc_signal< sc_logic > OUTPUT_STREAM_V_id_V_1_ack_out;
    sc_signal< sc_logic > OUTPUT_STREAM_V_id_V_1_sel_rd;
    sc_signal< sc_logic > OUTPUT_STREAM_V_id_V_1_sel;
    sc_signal< sc_lv<2> > OUTPUT_STREAM_V_id_V_1_state;
    sc_signal< sc_lv<6> > OUTPUT_STREAM_V_dest_V_1_data_out;
    sc_signal< sc_logic > OUTPUT_STREAM_V_dest_V_1_vld_in;
    sc_signal< sc_logic > OUTPUT_STREAM_V_dest_V_1_vld_out;
    sc_signal< sc_logic > OUTPUT_STREAM_V_dest_V_1_ack_in;
    sc_signal< sc_logic > OUTPUT_STREAM_V_dest_V_1_ack_out;
    sc_signal< sc_logic > OUTPUT_STREAM_V_dest_V_1_sel_rd;
    sc_signal< sc_logic > OUTPUT_STREAM_V_dest_V_1_sel;
    sc_signal< sc_lv<2> > OUTPUT_STREAM_V_dest_V_1_state;
    sc_signal< sc_lv<7> > top_stream_stream_s_address0;
    sc_signal< sc_logic > top_stream_stream_s_ce0;
    sc_signal< sc_lv<5> > top_stream_stream_s_q0;
    sc_signal< sc_logic > INPUT_STREAM_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond1_reg_316;
    sc_signal< sc_logic > OUTPUT_STREAM_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<1> > exitcond_reg_325;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter2;
    sc_signal< sc_lv<1> > ap_reg_pp1_iter1_exitcond_reg_325;
    sc_signal< sc_lv<6> > i_reg_207;
    sc_signal< sc_lv<6> > i_1_reg_219;
    sc_signal< sc_lv<7> > indvarinc_fu_230_p2;
    sc_signal< sc_lv<7> > indvarinc_reg_297;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > tmp_fu_236_p1;
    sc_signal< sc_lv<64> > tmp_reg_302;
    sc_signal< sc_lv<1> > tmp_1_fu_241_p2;
    sc_signal< sc_lv<1> > tmp_1_reg_312;
    sc_signal< sc_lv<1> > exitcond1_fu_252_p2;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<6> > i_2_fu_258_p2;
    sc_signal< sc_lv<6> > i_2_reg_320;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > exitcond_fu_274_p2;
    sc_signal< bool > ap_block_state7_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state8_pp1_stage0_iter1;
    sc_signal< bool > ap_block_state8_io;
    sc_signal< bool > ap_block_state9_pp1_stage0_iter2;
    sc_signal< bool > ap_block_state9_io;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<6> > i_3_fu_280_p2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<1> > tmp_last_V_fu_291_p2;
    sc_signal< sc_lv<1> > tmp_last_V_reg_339;
    sc_signal< sc_lv<32> > input_q0;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state4;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state7;
    sc_signal< sc_lv<7> > input_address0;
    sc_signal< sc_logic > input_ce0;
    sc_signal< sc_logic > input_we0;
    sc_signal< sc_lv<32> > input_d0;
    sc_signal< sc_lv<7> > invdar_reg_196;
    sc_signal< sc_lv<6> > ap_phi_mux_i_phi_fu_211_p4;
    sc_signal< sc_lv<64> > tmp_3_fu_269_p1;
    sc_signal< sc_lv<64> > tmp_5_fu_286_p1;
    sc_signal< bool > ap_block_pp1_stage0_01001;
    sc_signal< sc_lv<32> > top_stream_stream_2_fu_247_p1;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< bool > ap_block_state10;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_pp0_stage0;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_pp1_stage0;
    static const sc_lv<7> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<7> ap_const_lv7_41;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<6> ap_const_lv6_1F;
    static const sc_lv<32> ap_const_lv32_6;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_INPUT_STREAM_TDATA_blk_n();
    void thread_INPUT_STREAM_TREADY();
    void thread_INPUT_STREAM_V_data_V_0_ack_in();
    void thread_INPUT_STREAM_V_data_V_0_ack_out();
    void thread_INPUT_STREAM_V_data_V_0_data_out();
    void thread_INPUT_STREAM_V_data_V_0_load_A();
    void thread_INPUT_STREAM_V_data_V_0_load_B();
    void thread_INPUT_STREAM_V_data_V_0_sel();
    void thread_INPUT_STREAM_V_data_V_0_state_cmp_full();
    void thread_INPUT_STREAM_V_data_V_0_vld_in();
    void thread_INPUT_STREAM_V_data_V_0_vld_out();
    void thread_INPUT_STREAM_V_dest_V_0_ack_out();
    void thread_INPUT_STREAM_V_dest_V_0_vld_in();
    void thread_OUTPUT_STREAM_TDATA();
    void thread_OUTPUT_STREAM_TDATA_blk_n();
    void thread_OUTPUT_STREAM_TDEST();
    void thread_OUTPUT_STREAM_TID();
    void thread_OUTPUT_STREAM_TKEEP();
    void thread_OUTPUT_STREAM_TLAST();
    void thread_OUTPUT_STREAM_TSTRB();
    void thread_OUTPUT_STREAM_TUSER();
    void thread_OUTPUT_STREAM_TVALID();
    void thread_OUTPUT_STREAM_V_data_V_1_ack_in();
    void thread_OUTPUT_STREAM_V_data_V_1_ack_out();
    void thread_OUTPUT_STREAM_V_data_V_1_data_out();
    void thread_OUTPUT_STREAM_V_data_V_1_load_A();
    void thread_OUTPUT_STREAM_V_data_V_1_load_B();
    void thread_OUTPUT_STREAM_V_data_V_1_sel();
    void thread_OUTPUT_STREAM_V_data_V_1_state_cmp_full();
    void thread_OUTPUT_STREAM_V_data_V_1_vld_in();
    void thread_OUTPUT_STREAM_V_data_V_1_vld_out();
    void thread_OUTPUT_STREAM_V_dest_V_1_ack_in();
    void thread_OUTPUT_STREAM_V_dest_V_1_ack_out();
    void thread_OUTPUT_STREAM_V_dest_V_1_data_out();
    void thread_OUTPUT_STREAM_V_dest_V_1_sel();
    void thread_OUTPUT_STREAM_V_dest_V_1_vld_in();
    void thread_OUTPUT_STREAM_V_dest_V_1_vld_out();
    void thread_OUTPUT_STREAM_V_id_V_1_ack_in();
    void thread_OUTPUT_STREAM_V_id_V_1_ack_out();
    void thread_OUTPUT_STREAM_V_id_V_1_data_out();
    void thread_OUTPUT_STREAM_V_id_V_1_sel();
    void thread_OUTPUT_STREAM_V_id_V_1_vld_in();
    void thread_OUTPUT_STREAM_V_id_V_1_vld_out();
    void thread_OUTPUT_STREAM_V_keep_V_1_ack_in();
    void thread_OUTPUT_STREAM_V_keep_V_1_ack_out();
    void thread_OUTPUT_STREAM_V_keep_V_1_data_out();
    void thread_OUTPUT_STREAM_V_keep_V_1_sel();
    void thread_OUTPUT_STREAM_V_keep_V_1_vld_in();
    void thread_OUTPUT_STREAM_V_keep_V_1_vld_out();
    void thread_OUTPUT_STREAM_V_last_V_1_ack_in();
    void thread_OUTPUT_STREAM_V_last_V_1_ack_out();
    void thread_OUTPUT_STREAM_V_last_V_1_data_out();
    void thread_OUTPUT_STREAM_V_last_V_1_load_A();
    void thread_OUTPUT_STREAM_V_last_V_1_load_B();
    void thread_OUTPUT_STREAM_V_last_V_1_sel();
    void thread_OUTPUT_STREAM_V_last_V_1_state_cmp_full();
    void thread_OUTPUT_STREAM_V_last_V_1_vld_in();
    void thread_OUTPUT_STREAM_V_last_V_1_vld_out();
    void thread_OUTPUT_STREAM_V_strb_V_1_ack_in();
    void thread_OUTPUT_STREAM_V_strb_V_1_ack_out();
    void thread_OUTPUT_STREAM_V_strb_V_1_data_out();
    void thread_OUTPUT_STREAM_V_strb_V_1_sel();
    void thread_OUTPUT_STREAM_V_strb_V_1_vld_in();
    void thread_OUTPUT_STREAM_V_strb_V_1_vld_out();
    void thread_OUTPUT_STREAM_V_user_V_1_ack_in();
    void thread_OUTPUT_STREAM_V_user_V_1_ack_out();
    void thread_OUTPUT_STREAM_V_user_V_1_data_out();
    void thread_OUTPUT_STREAM_V_user_V_1_sel();
    void thread_OUTPUT_STREAM_V_user_V_1_vld_in();
    void thread_OUTPUT_STREAM_V_user_V_1_vld_out();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_01001();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_state10();
    void thread_ap_block_state4_pp0_stage0_iter0();
    void thread_ap_block_state5_pp0_stage0_iter1();
    void thread_ap_block_state7_pp1_stage0_iter0();
    void thread_ap_block_state8_io();
    void thread_ap_block_state8_pp1_stage0_iter1();
    void thread_ap_block_state9_io();
    void thread_ap_block_state9_pp1_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state4();
    void thread_ap_condition_pp1_exit_iter0_state7();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_phi_mux_i_phi_fu_211_p4();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_exitcond1_fu_252_p2();
    void thread_exitcond_fu_274_p2();
    void thread_i_2_fu_258_p2();
    void thread_i_3_fu_280_p2();
    void thread_indvarinc_fu_230_p2();
    void thread_input_address0();
    void thread_input_ce0();
    void thread_input_d0();
    void thread_input_we0();
    void thread_tmp_1_fu_241_p2();
    void thread_tmp_3_fu_269_p1();
    void thread_tmp_5_fu_286_p1();
    void thread_tmp_fu_236_p1();
    void thread_tmp_last_V_fu_291_p2();
    void thread_top_stream_stream_2_fu_247_p1();
    void thread_top_stream_stream_s_address0();
    void thread_top_stream_stream_s_ce0();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
